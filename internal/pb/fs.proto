syntax = "proto3";

package pb;

option go_package = "github.com/gadget-inc/dateilager/pkg/pb";

service Fs {
    rpc NewProject(NewProjectRequest) returns (NewProjectResponse);

    rpc DeleteProject(DeleteProjectRequest) returns (DeleteProjectResponse);

    rpc ListProjects(ListProjectsRequest) returns (ListProjectsResponse);

    rpc Get(GetRequest) returns (stream GetResponse);

    rpc GetCompress(GetCompressRequest) returns (stream GetCompressResponse);

    rpc Update(stream UpdateRequest) returns (UpdateResponse);

    rpc Inspect(InspectRequest) returns (InspectResponse);

    rpc Snapshot(SnapshotRequest) returns (SnapshotResponse);

    rpc Reset(ResetRequest) returns (ResetResponse);

    rpc GcProject(GcProjectRequest) returns (GcProjectResponse);

    rpc GcRandomProjects(GcRandomProjectsRequest) returns (GcRandomProjectsResponse);

    rpc GcContents(GcContentsRequest) returns (GcContentsResponse);
    
    rpc CloneToProject(CloneToProjectRequest) returns (CloneToProjectResponse);
}

message NewProjectRequest {
    int64 id = 1;
    optional int64 template = 2;
    repeated string pack_patterns = 3;
}

message NewProjectResponse {};


message DeleteProjectRequest {
    int64 project = 1;
}

message DeleteProjectResponse {};

message Project {
    int64 id = 1;
    int64 version = 2;
}

message ListProjectsRequest {};

message ListProjectsResponse {
    repeated Project projects = 1;
}

// Typescript does not support creating a new Object class
message Objekt {
    string path = 1;
    int64 mode = 2;
    int64 size = 3;
    bool deleted = 4;
    optional bytes content = 5;
}

message ObjectQuery {
    string path = 1;
    bool is_prefix = 2;
    bool with_content = 3;
    repeated string ignores = 4;
    bool with_hash = 5;
}

message GetRequest {
    int64 project = 1;
    optional int64 from_version = 2;
    optional int64 to_version = 3;
    repeated ObjectQuery queries = 4;
}

message GetResponse {
    int64 version = 1;
    Objekt object = 2;
}

message GetCompressRequest {
    int64 project = 1;
    optional int64 from_version = 2;
    optional int64 to_version = 3;
    repeated ObjectQuery queries = 5;
}

message GetCompressResponse {
    enum Format {
        S2_TAR = 0;
    }
    int64 version = 1;
    Format format = 2;
    bytes bytes = 3;
    optional string pack_path = 4;
}

message UpdateRequest {
    int64 project = 1;
    Objekt object = 2;
}

message UpdateResponse {
    int64 version = 1;
}

message InspectRequest {
    int64 project = 1;
}

message InspectResponse {
    int64 project = 1;
    int64 latest_version = 2;
    int64 live_objects_count = 3;
    int64 total_objects_count = 4;
}

message SnapshotRequest {};

message SnapshotResponse {
    repeated Project projects = 1;
}

message ResetRequest {
    repeated Project projects = 1;
}

message ResetResponse {};

message GcProjectRequest {
    int64 project = 1;
    int64 keep_versions = 2;
    optional int64 from_version = 3;
}

message GcProjectResponse {
    int64 count = 1;
    int64 project = 2;
}

message GcRandomProjectsRequest {
    float sample = 1;
    int64 keep_versions = 2;
    optional int64 from_version = 3;
}

message GcRandomProjectsResponse {
    int64 count = 1;
    repeated int64 projects = 2;
}

message GcContentsRequest {
    float sample = 1;
}

message GcContentsResponse {
    int64 count = 1;
}

message CloneToProjectRequest {
    int64 source = 1;
    int64 from_version = 2;
    int64 to_version = 3;
    int64 target = 4;
}

message CloneToProjectResponse {
    int64 latest_version = 1;
}
