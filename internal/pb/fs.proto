syntax = "proto3";

package pb;

option go_package = "github.com/gadget-inc/dateilager/pkg/pb";

service Fs {
    rpc Get(GetRequest) returns (stream GetResponse);

    rpc GetCompress(GetCompressRequest) returns (stream GetCompressResponse);

    rpc Update(stream UpdateRequest) returns (UpdateResponse);

    rpc Pack(PackRequest) returns (PackResponse);
}

message Object {
    string path = 1;
    int32 mode = 2;
    int64 size = 3;
    bool deleted = 4;
    optional bytes content = 5;
}

message ObjectQuery {
    string path = 1;
    bool is_prefix = 2;
    bool with_content = 3;
}

message GetRequest {
    int32 project = 1;
    optional int64 from_version = 2;
    optional int64 to_version = 3;
    repeated ObjectQuery queries = 4;
}

message GetResponse {
    int64 version = 1;
    Object object = 2;
}

message GetCompressRequest {
    int32 project = 1;
    optional int64 from_version = 2;
    optional int64 to_version = 3;
    repeated ObjectQuery queries = 5;
}

message GetCompressResponse {
    enum Format {
        ZSTD_TAR = 0;
    }
    int64 version = 1;
    Format format = 2;
    bytes bytes = 3;
}

message UpdateRequest {
    int32 project = 1;
    Object object = 2;
}

message UpdateResponse {
    int64 version = 1;
}

message PackRequest {
    int32 project = 1;
    string path = 2;
}

message PackResponse {
    int64 version = 1;
}
