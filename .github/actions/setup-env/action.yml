name: "Set up environment"
description: ""
runs:
  using: composite
  steps:
    - name: Install nix
      uses: nixbuild/nix-quick-install-action@v29
      with:
        nix_conf: experimental-features = nix-command flakes

    - name: Add nix devshell to .bash_profile
      run: echo "source <(nix print-dev-env --show-trace)" >> "$HOME/.bash_profile"
      shell: bash

    - name: Set cache paths
      id: cache-paths
      run: |
        echo "go_mod=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT
        echo "go_build=$(go env GOCACHE)" >> $GITHUB_OUTPUT
        echo "npm=$(npm config get cache)" >> $GITHUB_OUTPUT
        echo "go_sum_hash=${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}" >> $GITHUB_OUTPUT
        echo "npm_lock_hash=${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}" >> $GITHUB_OUTPUT
      shell: bash -l {0}

    - name: Cache Go mods
      uses: actions/cache@v4
      with:
        path: |
          ${{ steps.cache-paths.outputs.go_mod }}
          ${{ steps.cache-paths.outputs.go_build }}
        key: ${{ steps.cache-paths.outputs.go_sum_hash }}
        restore-keys: |
          ${{ steps.cache-paths.outputs.go_sum_hash }}
          ${{ runner.os }}-go-

    - name: Cache npm packages
      uses: actions/cache@v4
      with:
        path: ${{ steps.cache-paths.outputs.npm }}
        key: ${{ steps.cache-paths.outputs.npm_lock_hash }}
        restore-keys: |
          ${{ steps.cache-paths.outputs.npm_lock_hash }}
          ${{ runner.os }}-node-

    - name: Download Go modules
      run: go mod download
      shell: bash -l {0}

    - name: Add Go binaries to PATH
      run: echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      shell: bash -l {0}